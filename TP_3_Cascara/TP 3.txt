#include <stdio.h>
#include <stdlib.h>
#include "funciones.h"
#define TAM 3

int main()
{
    char seguir='s';
    int opcion=0;
    int seGuardo;
    EMovie movie[TAM];
    EMovie* lugar;

    iniciarEstado(movie,TAM);

    while(seguir=='s')
    {
        printf("1- Agregar pelicula\n");
        printf("2- Borrar pelicula\n");
        printf("3- Generar pagina web\n");
        printf("4- Salir\n");

        scanf("%d",&opcion);

        switch(opcion)
        {
        case 1:
        {
            lugar=obtenerEspacioLibre(movie,TAM);

            if(lugar!=NULL)
            {
                seGuardo=agregarPelicula(lugar);
                if(seGuardo)
                {
                    printf("SE GUARDO CON EXITO!!!\n\n");
                }
                else
                {
                    printf("NO SE PUDO GUARDAR!!!\n\n");
                }
            }
            else
            {
                printf("NO HAY LUGAR");
            }
        }
        break;
        case 2:
            break;
        case 3:
        {
            generarPagina(movie,"datos.bin");
        }
        break;
        case 4:
            seguir = 'n';
            break;
        }
    }

    return 0;
}

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <conio.h>
#include "funciones.h"


int agregarPelicula(EMovie* movie)
{

    int seGuardo=0;
    FILE* miArchivo;
    miArchivo = fopen("datos.bin", "ab");

    if(miArchivo!=NULL)
    {
        igresoCadenaChar("INGRESE TITULO: ",movie->titulo);
        igresoCadenaChar("INGRESE GENERO: ",movie->genero);
        validarSoloLetras(movie->genero);
        igresoCadenaChar("INGRESE DESCRIPCION: ",movie->descripcion);
        movie->duracion=ingresoInt("INGRESE DURACION: ");
        movie->puntaje=ingresoInt("INGRESE PUNTAJE: ");
        //igresoCadenaChar("INGRESE LINK IMAGEN: ",movie->linkImagen);
        strcpy(movie->linkImagen,"https://upload.wikimedia.org/wikipedia/commons/thumb/0/06/Pac_Man.svg/120px-Pac_Man.svg.png");
        fwrite(movie, sizeof(EMovie), 1, miArchivo);
        movie->estado=1;

        seGuardo=1;
    }
    fclose(miArchivo);

    return seGuardo;
}

int ingresoInt(char texto[])
{
    int dato;
    char auxChar[200];

    printf("\n%s",texto);
    gets(auxChar);

    dato=validarNumeroInt(auxChar);

    return dato;
}

int validarNumeroInt(char dato[])
{
    int num;
    int flag=0;
    int i;


    for(i=0; dato[i]!='\0'; i++)
    {
        if(dato[i]<'0'||dato[i]>'9')
        {
            printf("ERROR:NO PUEDE INGRESRAR LETRAS!!!!!\n");
            flag=1;
            break;
        }
    }

    if(flag==1)
    {
        num=ingresoInt("REINGRESE NUMERO: ");
    }
    else
    {
        num = atof(dato);
    }

    return num;
}

void igresoCadenaChar(char texto[],char dato[])
{
    printf("%s",texto);
    fflush(stdin);
    gets(dato);
}
void validarSoloLetras(char dato[])
{
    int i;
    int flag=0;
    for(i=0; dato[i]!='\0'; i++)
    {
        if(!((dato[i]>='A'&&dato[i]<='Z')||(dato[i]>='a'&&dato[i]<='z')))
        {
            printf("\nSOLO PUEDE INGRESAR LETRAS LETRAS Y SIN DEJAR ESPACIO!!!!!\n");
            flag=1;
            break;
        }
    }
    if(flag==1)
    {
        igresoCadenaChar("\nREINGRESE NOMBRE: ",dato);
    }
}

void generarPagina(EMovie* lista, char nombre[])
{
    FILE* miArchivo;
    char buffer[2000]= {};
    char auxChar[30];
    int i=0;

    miArchivo = fopen(nombre,"rb");
    i=0;
    while(!feof(miArchivo))
    {
      fread((lista+i), sizeof(EMovie), 1, miArchivo);

        i++;
    }
    fclose(miArchivo);


    fclose(miArchivo);

    strcat(buffer,"<html><head><style>table, th, td {border: 1px solid black; border-collapse: collapse;}th, td { padding: 15px;}</style> </head><body><MARQUEE BGCOLOR=#7070ff><h1>");
    strcat(buffer,"PELICULAS!!!!!");

    miArchivo = fopen("prueva.html", "w");

    fprintf(miArchivo,buffer);
    i=0;
    while(!feof(miArchivo))
    {
        strcpy(buffer,"");
        strcat(buffer,"</h1></MARQUEE><br><br> <article class='col-md-4 article-intro'><a href='#'><img class='img-responsive img-rounded' src='");
        strcat(buffer,(lista+i)->linkImagen);
        strcat(buffer,"'alt=''> </h1></MARQUEE><br><br> </a><h3><a href='#'>");
        strcat(buffer,(lista+i)->titulo);
        strcat(buffer,"</a></h3><ul><li>Género:");
        strcat(buffer,(lista+i)->genero);
        strcat(buffer,"</li><li>Puntaje:");
        itoa((lista+i)->puntaje,auxChar,10);
        strcat(buffer,auxChar);
        strcat(buffer,"</li><li>Duración:");
        itoa((lista+i)->duracion,auxChar,10);
        strcat(buffer,auxChar);
        strcat(buffer,"</li></ul><p>");
        strcat(buffer,(lista+i)->descripcion);

        fprintf(miArchivo,buffer);

        i++;
    }

    fclose(miArchivo);

    printf("CARGADO CON EXITO!!!\n\n");

}

void iniciarEstado(EMovie* lista,int tam)
{
    int i;
    for(i=0; i<tam; i++)
    {
        (lista+i)->estado=0;
    }
}

EMovie* obtenerEspacioLibre(EMovie* lista,int tam)
{
    int i;
    EMovie* aux=NULL;

    for(i=0; i<tam; i++)
    {
        if((lista+i)->estado==0)
        {
            aux=(lista+i);
            break;
        }
    }
    return aux;
}



#ifndef FUNCIONES_H_INCLUDED
#define FUNCIONES_H_INCLUDED

typedef struct{
    char titulo[20];
    char genero[20];
    int duracion;
    char descripcion[50];
    int puntaje;
    char linkImagen[100];
    int estado;
}EMovie;



/**
 *  Agrega una pelicula al archivo binario
 *  @param movie la estructura a ser agregada al archivo
 *  @return retorna 1 o 0 de acuerdo a si pudo agregar la pelicula o no
 */
int agregarPelicula(EMovie* movie);

/**
 *  Borra una pelicula del archivo binario
 *  @param movie la estructura a ser eliminada al archivo
 *  @return retorna 1 o 0 de acuerdo a si pudo eliminar la pelicula o no
 */
int borrarPelicula(EMovie movie);

/**
 *  Genera un archivo html a partir de las peliculas cargadas en el archivo binario.
 *  @param lista la lista de peliculas a ser agregadas en el archivo.
 *  @param nombre el nombre para el archivo.
 */
void generarPagina(EMovie* lista, char nombre[]);

void iniciarEstado(EMovie* lista,int tam);
int ingresoInt(char texto[]);
int validarNumeroInt(char dato[]);
void igresoCadenaChar(char texto[],char dato[]);
void validarSoloLetras(char dato[]);
EMovie* obtenerEspacioLibre(EMovie* lista,int tam);

#endif // FUNCIONES_H_INCLUDED







